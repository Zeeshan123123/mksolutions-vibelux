server {
    listen 80;
    listen [::]:80;
    server_name www.vibelux.ai vibelux.ai;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.vibelux.ai vibelux.ai;

    # SSL configuration (update with your certificates)
    ssl_certificate /path/to/ssl/certificate.crt;
    ssl_certificate_key /path/to/ssl/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Updated Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' *.clerk.accounts.dev *.clerk.dev clerk.vibelux.ai *.pusher.com https://challenges.cloudflare.com; script-src-elem 'self' 'unsafe-inline' *.clerk.accounts.dev *.clerk.dev clerk.vibelux.ai; style-src 'self' 'unsafe-inline' *.clerk.accounts.dev fonts.googleapis.com; style-src-elem 'self' 'unsafe-inline' *.clerk.accounts.dev fonts.googleapis.com; font-src 'self' fonts.gstatic.com *.clerk.accounts.dev; img-src 'self' data: blob: *.clerk.dev *.clerk.com images.clerk.dev img.clerk.com www.gravatar.com https:; connect-src 'self' *.clerk.accounts.dev *.clerk.dev clerk.vibelux.ai wss://*.pusher.com *.pusherapp.com https:; frame-src 'self' *.clerk.accounts.dev *.clerk.dev challenges.cloudflare.com; worker-src 'self' blob:; child-src 'self' blob:;" always;

    # Fix for Next.js static files
    location /_next/static/ {
        alias /var/www/vibelux/.next/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Fix MIME types
        location ~ \.js$ {
            add_header Content-Type "application/javascript; charset=utf-8";
        }
        
        location ~ \.css$ {
            add_header Content-Type "text/css; charset=utf-8";
        }
        
        location ~ \.woff2?$ {
            add_header Content-Type "font/woff2";
        }
    }

    # Next.js chunks
    location /_next/static/chunks/ {
        alias /var/www/vibelux/.next/static/chunks/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Content-Type "application/javascript; charset=utf-8";
    }

    # Next.js CSS
    location /_next/static/css/ {
        alias /var/www/vibelux/.next/static/css/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Content-Type "text/css; charset=utf-8";
    }

    # Public assets
    location /public/ {
        alias /var/www/vibelux/public/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # API routes
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Default Next.js application
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
}